<div class="container">
    <% if (error != undefined || error != null) { %>
        <div class="notification is-danger is-light" id="error">
            <%= error %>
        </div>
    <% } %>
    <h4 class="title is-4">Publicar Productos en Canales</h4>
    <hr>
    <div class="columns is-gapless">
        <div class="column">
            <div class="box">
                <div class="field">
                    <br>
                    <label class="label is-size-7">Tipo de Proceso</label>
                    <div class="select is-fullwidth">
                        <select name="action" id="action" required>
                            <option value="ProductCreate">Publicar Productos Faltantes</option>
                            <option value="ProductUpdate">Actualizar Cambios en los Productos</option>
                            <option value="Image">Cargar/Actualizar Imágenes de mis Productos </option>
                            <option value="ProductQcStatus">Procesar Estado de Calidad de mis Productos</option>
                        </select>
                    </div>
                </div>
                <br>
				<% integra = null; %>
				<% integra = integrations.filter(data => data.channel.type === 'marketplace');%>
				<% if(integra.length > 0){%>
					<div class="field">
						<label class="label is-size-7">Elegir Canal</label>
						<div class="select is-fullwidth">
							<select class="is-capitalized" name="integration" id="selectIntegration" required>
							<option class="is-capitalized" value="">-- Elegir Canal --</option>
							<% integra.forEach(function(inte){ %>
								<option class="is-capitalized" value="<%=inte.id%>"><%= inte.name %></option>
							<%})%>
							</select>
						</div>
					</div>
				<%}%>
                <br>
                <div class="buttons is-right is-fixed-bottom">
                    <br><br><br>
                    <button id="process" type="submit" class="button is-primary"><i class="bx bx-cloud-upload"></i>&nbsp;Publicar Productos</button>
                </div>
            </div>
        </div>
        <div class="column">
            <div class="loading container is-fluid"></div>
            <div id="report" class="container is-fluid is-hidden">
                <h6 class="title is-6">Espera un momento por favor...</h6>
                <hr>
                <div class="notification is-primary">
					Se han procesado un total de <span id="items">0</span> registros.
                    <button class="button is-default is-small" id="showProductsSuccess" target="_blank">Ver Productos</button>
				</div>
                <div class="notification is-danger">
                    <p>Hemos identificado <span id="errors">0</span> error(es).<br>
                    <button class="button is-default is-small"  id="showProductsError" target="_blank">Ver Productos</button></p>
                    <br>
                    <div class="container is-fluid">
                        <ol id="error-list">
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    live('#process','click',e=>{
        e.preventDefault();
		let action = document.querySelector('#action').value
		let integrationId = document.querySelector('#selectIntegration').value
        let seller = '<%- seller %>';
        let loading = document.querySelector('.loading');
        loading.innerHTML='<br><p>Por favor espera, estamos ejecutando el proceso solicitado. Tomará unos minutos.</p><br><progress class="progress is-small is-primary" max="100">15%</progress>';
        let report = document.querySelector('#report');
        let items = document.querySelector('#items');
        let errors = document.querySelector('#errors');
        let errorlist = document.querySelector('#error-list');
        errors.innerHTML=0;
        errorlist.innerHTML='';
        items.innerHTML=0;
        if(!hasClass(report,'is-hidden')){addClass(report,'is-hidden');}
        io.socket.post('/multiple',{action,seller,integrationId},resData =>{
            loading.innerHTML='';
            if(hasClass(report,'is-hidden')){removeClass(report,'is-hidden');}
            if(resData.items.length>=1){
                items.innerHTML=parseInt(resData.items.length);
            }

            if(resData.errors.length>=1){
                errors.innerHTML=resData.errors.length;
                for(let e of resData.errors){
					let err = document.createElement('li');
					err.innerHTML=e;
					errorlist.appendChild(err);
                }
            }
            let mensaje = document.querySelector('#report > .title');
            mensaje.innerHTML='Proceso Finalizado';
        });
    });

    live('#showProductsSuccess','click',e=>{
        e.preventDefault();
        let integrationId = document.querySelector('#selectIntegration').value
        window.location.href=`/products/<%- seller %>?result=corrects&integration=${integrationId}`;
    });

    live('#showProductsError','click',e=>{
        e.preventDefault();
		window.location.href='/products/<%- seller %>?result=errors';
    });

    io.socket.on("reponse_product_created", (resData)=>{
        let report = document.querySelector('#report');
        let errors = document.querySelector('#errors');
        let errorlist = document.querySelector('#error-list');
        errors.innerHTML=0;
        errorlist.innerHTML='';
        errors.innerHTML = resData.errors.length;
        for(let e of resData.errors){
            let err = document.createElement('li');
            err.innerHTML= 'Referencia: ' + e.reference +' <br>Errores: '+ e.message;
            errorlist.appendChild(err);
        }
      });

</script>
