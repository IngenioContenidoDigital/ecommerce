<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/bulma-tagsinput@2.0.0/dist/js/bulma-tagsinput.min.js"></script>
<link href='https://cdn.jsdelivr.net/npm/bulma-tagsinput@2.0.0/dist/css/bulma-tagsinput.min.css' rel='stylesheet'>
<div class="container">
    <div class="columns">
        <div class="column">
            <table class="table is-hoverable is-size-6" id="manifest-table">
                <thead>
                  <tr>
                    <th><small>Manifes Id</small></th>
                    <th><small>Fecha</small></th>
                    <th><small>Opciones</small></th>
                  </tr>
                </thead>
                <tbody>
                    <% listOrders.forEach(data => { %>
                        <tr>
                            <td>
                                <%= data.manifest %>
                            </td>
                            <td>
                                <%= moment(data.date).locale('es').format('DD MMMM YYYY HH:mm:ss') %>
                            </td>
                            <td>
                                <a href="#" class="has-text-info manifest" manifest='<%= data.manifest %>'><i class="is-size-4 bx bx-printer" manifest='<%= data.manifest %>'></i></a>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    bulmaTagsinput.attach();
    let datatable = new simpleDatatables.DataTable('#manifest-table',{
        searchable:true,
        sortable:true,
        paging:true,
        perPageSelect:[5,10,20,30,50],
        perPage:50,
        labels: {
            placeholder: "Buscar...",
            perPage: "{select} registros por página",
            noRows: "No se encontraron datos",
            info: "Mostrando {start} a {end} de {rows} registros",
        }
    });
    live('.manifest','click', e => {
        e.preventDefault();
        const manifest = e.target.getAttribute('manifest')
        io.socket.post(`/showmanifest`,{manifest}, resData =>{
            if (resData) {
                const fileWindow = window.open();
                fileWindow.document.write(
                `<title>Visualisación</title>
                <embed src="data:text/html;base64,${resData}" width="922"; height="800">`
                );
                fileWindow.focus();
                fileWindow.print();
                fileWindow.document.close();
            }
        });
    });
</script>
